# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db"
python_files = [
    "tests.py",
    "test_*.py",
]

# ==== Coverage ====
[tool.coverage.run]
include = ["metadata_catalogue/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]


# ==== black ====
[tool.black]
line-length = 119
target-version = ['py311']


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
known_first_party = [
    "metadata_catalogue",
    "config",
]
skip = ["venv/"]
skip_glob = ["**/migrations/*.py"]


# ==== mypy ====
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = [
    "pylint_django",
]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring",
    "invalid-name",
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]


# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/Riverside-Healthcare/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

[tool.pdm.dev-dependencies]
dev = [
    "Werkzeug[watchdog]",
    "ipdb",
    "mypy",
    "django-stubs[compatible-mypy]",
    "pytest",
    "pytest-sugar",
    "flake8",
    "flake8-isort",
    "coverage",
    "black",
    "djlint",
    "pylint-django",
    "pre-commit",
    "factory-boy",
    "django-debug-toolbar",
    "django-extensions",
    "django-coverage-plugin",
    "pytest-django",
    "django-models2puml>=0.2",
]

[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
dependencies = [
    "python-slugify>=8.0.1",
    "Pillow==11.1.0",
    "rcssmin",
    "argon2-cffi",
    "whitenoise",
    "redis",
    "hiredis",
    "psycopg[binary]",
    "backoff",
    "requests",
    "beautifulsoup4",
    "lxml",
    "django>=4.0.0,<5.0.0",
    "django-environ",
    "django-model-utils",
    "django-allauth",
    "django-crispy-forms",
    "crispy-bootstrap5",
    "django-redis",
    "django-health-check",
    "django-probes",
    "django-countries-plus",
    "django-languages-plus",
    "django-postgres-extra",
    "django-q",
    "OWSLib",
    "shapely",
    "xmltodict",
    "geolinks",
    "pycsw @ git+https://github.com/geopython/pycsw.git@3.0.0-alpha4",
    "django-solo",
    "pygeometa",
    "django-lifecycle",
    "pygeoapi @ git+https://github.com/geopython/pygeoapi.git@de1a7d93eeb492c2b51908e9875a61074b7eab6b",
    "django-treebeard>=4.7",
    "django-polymorphic>=3.1.0",
    "django-ninja>=1.1.0",
    "django-appconf>=1.0.6",
    "django-cors-headers>=4.3.1",
    "rules>=3.3",
    "django-rest-framework>=0.1.0",
    "drf-spectacular>=0.27.2",
    "drf-nested-routers",
    "drf-standardized-errors[openapi]",
    "django-filter>=24.2",
]
requires-python = ">=3.10"
name = "nina-catalogue"
version = "0.1.0"
description = ""
authors = [
    {name = "Niccolò Cantù", email = "niccolo.cantu@nina.no"},
]
readme = "README.md"
license = {text = "GPLv3"}

[project.optional-dependencies]
production = [
    "sentry-sdk[django]>=1.43.0",
    "gunicorn>=21.2.0",
]
docs = [
    "sphinx>=7.2.6",
    "sphinx-autobuild>=2021.3.14",
]
