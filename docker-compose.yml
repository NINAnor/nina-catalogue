version: '3'

volumes:
  pgdata: {}
  statics: {}

x-django-env: &django-env
  DATABASE_URL: "postgis://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres?sslmode=disable"
  DJANGO_SETTINGS_MODULE: config.settings.production
  DJANGO_ACCOUNT_ALLOW_REGISTRATION: "True"
  USE_DOCKER: "yes"

x-django-prod-env: &django-prod-env
  <<: *django-env
  DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
  DJANGO_SERVER_EMAIL: ""
  DJANGO_ADMIN_URL: admin/
  DJANGO_SECURE_SSL_REDIRECT: False
  WEB_CONCURRENCY: 4
  REDIS_URL: redis://redis:6379/0
  DJANGO_ALLOWED_HOSTS: "localhost,django"

x-django-dev-env: &django-dev-env
  <<: *django-env
  DJANGO_SETTINGS_MODULE: config.settings.local
  IPYTHONDIR: "/app/.ipython"

x-django: &django
  build:
    target: django
  image: metadata_catalogue_django
  depends_on:
    - postgres
  environment:
    <<: *django-env


x-django-prod: &django-prod
  <<: *django
  depends_on:
    - redis
    - postgres
  profiles:
    - prod
  command: gunicorn config.wsgi --bind 0.0.0.0:8000 --chdir=/app

x-django-dev: &django-dev
  <<: *django
  image: metadata_catalogue_django:dev
  build:
    target: dev
  profiles:
    - dev
  environment:
    <<: *django-dev-env
  volumes:
    - ./config:/app/config
    - ./metadata_catalogue:/app/metadata_catalogue
    - ./locale:/app/locale
  command: python manage.py runserver 0.0.0.0:8000
  #command: python -m pdb -c continue manage.py runserver 0.0.0.0:8000 --nothreading --noreload

services:
  django:
    <<: *django-prod
    environment:
      <<: *django-prod-env
      DJANGO_COLLECTSTATIC: 1
      DJANGO_MIGRATE: 1
    volumes:
      - statics:/app/staticfiles

  django-dev:
    <<: *django-dev
    tty: true
    stdin_open: true
    hostname: django
    environment:
      <<: *django-dev-env
      DJANGO_MIGRATE: 1
    ports:
      - "8000:8000"

  queue:
    <<: *django-prod
    environment:
      <<: *django-prod-env
      WAIT_FOR_HTTP: http://django:8000/ht/
    command: python manage.py qcluster

  queue-dev:
    <<: *django-dev
    environment:
      <<: *django-dev-env
      WAIT_FOR_HTTP: http://django:8000/ht/
    command: python manage.py qcluster

  postgres:
    image: postgis/postgis:16-3.4
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432

  # documentation
  docs:
    image: metadata_catalogue_docs
    build:
      context: .
      dockerfile: ./Dockerfile
      target: docs
    environment:
      <<: *django-env
      DJANGO_SETTINGS_MODULE: config.settings.local
    volumes:
      - ./docs:/app/docs
      - ./config:/app/config
      - ./metadata_catalogue:/app/metadata_catalogue
    ports:
      - '9000:9000'
    profiles:
      - dev

  bruno:
    build:
      dockerfile: ./bruno/Dockerfile
    environment:
      WAIT_FOR_HTTP: http://django:8000/ht/
    profiles:
      - dev
    depends_on:
      - django-dev

  # cache
  redis:
    image: redis:6
    profiles:
      - prod

  mitm:
    image: mitmproxy/mitmproxy:latest
    command: mitmweb --web-host 0.0.0.0 --mode reverse:http://django-dev:8000 --modify-body /django-dev:8000/mitm:8080
    profiles:
      - dev
    ports:
      - 8080:8080
      - 8081:8081

  nginx:
    build:
      context: ./nginx
    profiles:
      - prod
    volumes:
      - statics:/statics
    ports:
      - "8000:80"
