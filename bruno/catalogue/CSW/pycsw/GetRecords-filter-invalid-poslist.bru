meta {
  name: GetRecords-filter-invalid-poslist
  type: http
  seq: 3
}

post {
  url: {{BASE_URL}}/csw/
  body: xml
  auth: none
}

body:xml {
  <csw:GetRecords
  	xmlns:csw="http://www.opengis.net/cat/csw/2.0.2"
  	xmlns:gml="http://www.opengis.net/gml"
  	xmlns:ogc="http://www.opengis.net/ogc"
  	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xmlns:ows="http://www.opengis.net/ows" outputSchema="http://www.opengis.net/cat/csw/2.0.2"
                  outputFormat="application/xml" version="2.0.2" service="CSW" resultType="results" maxRecords="1000"
                  xsi:schemaLocation="http://www.opengis.net/cat/csw/2.0.2 http://schemas.opengis.net/csw/2.0.2/CSW-discovery.xsd">
  	<csw:Query typeNames="csw:Record">
  		<csw:ElementSetName>full</csw:ElementSetName>
  		<csw:Constraint version="1.1.0">
  			<ogc:Filter>
  				<ogc:Intersects>
  					<ogc:PropertyName>ows:BoundingBox</ogc:PropertyName>
  					<gml:Polygon srsName="http://www.opengis.net/gml/srs/epsg.xml#4326">
  						<gml:exterior>
  							<gml:LinearRing>
  								<gml:posList srsDimension="2">11 16 49 17 10 10</gml:posList>
  							</gml:LinearRing>
  						</gml:exterior>
  					</gml:Polygon>
  				</ogc:Intersects>
  			</ogc:Filter>
  		</csw:Constraint>
  	</csw:Query>
  </csw:GetRecords>

}

assert {
  res.status: eq 200
}

tests {
  const { XMLParser, XMLBuilder } = require("fast-xml-parser");
  const {
    isValidXML,
    isNotAnException,
  } = require('./asserts');

  test("response valid", function() {
    isValidXML(res);
  })

  test("transactions are not supported", function(){
    const parser = new XMLParser({ removeNSPrefix: true });
    let jObj = parser.parse(res.getBody());

    expect(jObj).to.have.property('ExceptionReport')
    expect(jObj).to.have.nested.property('ExceptionReport.Exception.ExceptionText', "Invalid Constraint: Invalid Filter request: Invalid number of coordinates in geometry")
  })
}
